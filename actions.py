# This files contains your custom actions which can be used to run
# custom Python code.
#
# See this guide on how to implement these action:
# https://rasa.com/docs/rasa/core/actions/#custom-actions/


# This is a simple example for a custom action which utters "Hello World!"

from typing import Any, Text, Dict, List
from rasa_sdk import Tracker
from rasa_sdk import Action, Tracker
from rasa_sdk.executor import CollectingDispatcher
import requests
import json
import re
import gc
from rasa_sdk.forms import FormAction
from requests.models import Response
import feedparser
import random
import pathlib
import os

def load_faq():
    q_list = []
    a_list = []

    filepath = str(pathlib.Path().absolute()) + '/data/timviec365/cauhoithuonggap.txt'.replace('/', os.sep)
    with open(filepath) as fp:
        line = fp.readline()
        cnt = 1
        while line:
            # Process
            # print("Process line ", line)
            q_list.append( line.split("|")[0].replace("\n",""))
            a_list.append( line.split("|")[1].replace("\n",""))
            line = fp.readline()
            cnt += 1
    return q_list,a_list

q_list,a_list=load_faq()
# print("Loaded", len(q_list))
hotline='Ngo√†i ra b·∫°n c√≥ th·ªÉ g·ªçi tr·ª±c ti·∫øp cho nh√¢n vi√™n timviec365 v√†o s·ªë 1900633682 - ph√≠m 1 ƒë·ªÉ ƒë∆∞·ª£c ph·ª•c v·ª•.'
def get_faq():
    idx =random.randint(0,len(q_list)-1)
    ret_text = "\nD∆∞·ªõi ƒë√¢y l√† m·ªôt v√†i th√¥ng tin h·ªØu √≠ch hay g·∫∑p:"
    ret_text += "\nüî∏H·ªèi: " + q_list[idx]
    ret_text += "\nüî∏ƒê√°p:Ô∏è " + a_list[idx] 
    ret_text += "\nüî∏Ngo√†i ra, b·∫°n c√≥ th·ªÉ g·ªçi hotline s·ªë  1900633682 - ph√≠m 1 ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n th√™m." 

    return ret_text

class act_unknown(Action):
    
    def name(self) -> Text:
        return "act_unknown"

    def run(self, dispatcher: CollectingDispatcher,
            tracker: Tracker,
            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:
        
        text="Xin l·ªói b·∫°n v√¨ hi·ªán t·∫°i t√¥i ch∆∞a hi·ªÉu b·∫°n mu·ªën g√¨! B·∫°n c√≥ th·ªÉ ch·ªçn m·ªôt trong nh·ªØng y√™u c·∫ßu sau:\n1. G·∫∑p nh√¢n vi√™n t∆∞ v·∫•n.\n2. T√¨m vi·ªác l√†m quanh ƒë√¢y \n3. T√¨m ·ª©ng vi√™n ph√π h·ª£p \n4. C√°ch t·∫°o Cv online "
        dispatcher.utter_message(text=text)
        gc.collect()
        return []

class act_help(Action):
    
    def name(self) -> Text:
        return "act_help"
    def run(self, dispatcher: CollectingDispatcher,
            tracker: Tracker,
            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:
        gift_cnt = get_faq()
        dispatcher.utter_message(
            text="Hi, Ch√†o b·∫°n.\nM√¨nh c√≥ th·ªÉ gi√∫p b·∫°n gi·∫£i ƒë√°p nh·ªØng v·∫•n ƒë·ªÅ v·ªÅ t√¨m vi·ªác l√†m, t√¨m ·ª©ng vi√™n, t·∫°o cv v√† r·∫•t nhi·ªÅu th·ª© kh√°c..."+gift_cnt +"\nB·∫°n c√≥ y√™u c·∫ßu c·ª• th·ªÉ g√¨ kh√¥ng ·∫°?")
        
        return []
# Ham lay ket qua so xo va tra ve. Ten ham la action_get_lottery
class action_get_lottery(Action):
	def name(self):
            # Doan nay khai bao giong het ten ham ben tren la okie
		    return 'action_get_lottery'
	def run(self, dispatcher, tracker, domain):
            # Khai bao dia chi luu tru ket qua so xo. O day lam vi du nen minh lay ket qua SX Mien Bac
            url = 'https://xskt.com.vn/rss-feed/mien-bac-xsmb.rss'
            # Tien hanh lay thong tin tu URL
            feed_cnt = feedparser.parse(url)
            # Lay ket qua so xo moi nhat
            first_node = feed_cnt['entries']
            # Lay thong tin ve ngay va chi tiet cac giai
            return_msg = first_node[0]['title'] + "\n" + first_node[0]['description']
            # Tra ve cho nguoi dung
            dispatcher.utter_message(return_msg)
            gift_cnt = get_faq()
            dispatcher.utter_message(
                text=gift_cnt)
            return []

# nh·ªØng v·∫•n ƒë·ªÅ v·ªÅ cv
def load_cv():
    q_list = []
    a_list = []

    filepath = str(pathlib.Path().absolute()) + '/data/timviec365/cv.txt'.replace('/', os.sep)
    with open(filepath) as fp:
        line = fp.readline()
        cnt = 1
        while line:
            # Process
            # print("Process line ", line)
            q_list.append( line.split("|")[0].replace("\n",""))
            a_list.append( line.split("|")[1].replace("\n",""))
            line = fp.readline()
            cnt += 1
    return q_list,a_list
q_listcv,a_listcv=load_cv()
def get_cv():
    idx =random.randint(0,len(q_listcv)-1)
    ret_text = "\nM·ªôt s·ªë v·∫•n ƒë·ªÅ b·∫°n c√≥ th·ªÉ quan t√¢m kh√°c:"
    ret_text += "\nüî∏H·ªèi: " + q_listcv[idx]
    ret_text += "\nüî∏ƒê√°p:Ô∏è " + a_listcv[idx]
    ret_text += "\nüî∏Ngo√†i ra, b·∫°n c√≥ th·ªÉ g·ªçi hotline s·ªë  1900633682 - ph√≠m 1 ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n th√™m." 
    return ret_text
class act_cv(Action):
    
    def name(self) -> Text:
        return "action_cv"
    def run(self, dispatcher: CollectingDispatcher,
            tracker: Tracker,
            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:
        gift_cv = get_cv()
        # dispatcher.utter_message(
        #     text="B·∫°n truy c·∫≠p v√†o link https://timviec365.vn/cv-xin-viec ƒë·ªÉ t·∫°o cv nh√©")
        # dispatcher.utter_message(text="Ngo√†i ra b·∫°n c√≥ th·ªÉ g·ªçi tr·ª±c ti·∫øp cho nh√¢n vi√™n timviec365 v√†o s·ªë 1900633682 - ph√≠m 1 n·∫øu g·∫∑p ph·∫£i v·∫•n ƒë·ªÅ trong qu√° tr√¨nh t·∫°o cv.")
        
        dispatcher.utter_message(
            text="B·∫°n truy c·∫≠p v√†o link https://timviec365.vn/cv-xin-viec ƒë·ªÉ t·∫°o cv nh√©"+gift_cv)
        
        return []


#nh·ªØng v·∫•n ƒë·ªÅ v·ªÅ ·ª©ng vi√™n t√¨m vi·ªác l√†m
def load_job():
    q_list = []
    a_list = []

    filepath = str(pathlib.Path().absolute()) + '/data/timviec365/ungvien.txt'.replace('/', os.sep)
    with open(filepath) as fp:
        line = fp.readline()
        cnt = 1
        while line:
            # Process
            # print("Process line ", line)
            q_list.append( line.split("|")[0].replace("\n",""))
            a_list.append( line.split("|")[1].replace("\n",""))
            line = fp.readline()
            cnt += 1
    return q_list,a_list
q_listuv,a_listuv=load_job()

def get_uv():
    idx =random.randint(0,len(q_listuv)-1)
    ret_text = "\nM·ªôt s·ªë v·∫•n ƒë·ªÅ li√™n quan:"
    ret_text += "\nüî∏H·ªèi: " + q_listuv[idx]
    ret_text += "\nüî∏ƒê√°p:Ô∏è " + a_listuv[idx]
    ret_text += "\nüî∏Ngo√†i ra, b·∫°n c√≥ th·ªÉ g·ªçi hotline s·ªë  1900633682 - ph√≠m 1 ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n th√™m." 
    return ret_text

class act_job(Action):
    def name(self) -> Text:
        return "action_job"
    def run(self, dispatcher: CollectingDispatcher,
            tracker: Tracker,
            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:
        gift_uv = get_uv()
        dispatcher.utter_message(
            text="ƒê·ªÉ t√¨m ki·∫øm vi·ªác l√†m, b·∫°n vui l√≤ng truy c·∫≠p https://timviec365.vn/dang-ky-ung-vien.html"+gift_uv)
        return []


# Nh√† tuy·ªÉn d·ª•ng t√¨m ki·∫øm ·ª©ng vi√™n 
def load_ntd():
    q_list = []
    a_list = []

    filepath = str(pathlib.Path().absolute()) + '/data/timviec365/ntd.txt'.replace('/', os.sep)
    with open(filepath) as fp:
        line = fp.readline()
        cnt = 1
        while line:
            # Process
            # print("Process line ", line)
            q_list.append( line.split("|")[0].replace("\n",""))
            a_list.append( line.split("|")[1].replace("\n",""))
            line = fp.readline()
            cnt += 1
    return q_list,a_list
q_listntd,a_listntd=load_ntd()
def get_ntd():
    idx =random.randint(0,len(q_listntd)-1)
    ret_text = "\nM·ªôt s·ªë v·∫•n ƒë·ªÅ b·∫°n c√≥ th·ªÉ quan t√¢m kh√°c:"
    ret_text += "\nüî∏H·ªèi: " + q_listntd[idx]
    ret_text += "\nüî∏ƒê√°p:Ô∏è " + a_listntd[idx] 
    ret_text += "\nüî∏Ngo√†i ra, b·∫°n c√≥ th·ªÉ g·ªçi hotline s·ªë  1900633682 - ph√≠m 1 ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n th√™m." 
    return ret_text

class act_offer_job(Action):
    
    def name(self) -> Text:
        return "action_offer_job"
    def run(self, dispatcher: CollectingDispatcher,
            tracker: Tracker,
            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:
        gift_ntd = get_ntd()
        dispatcher.utter_message(
            text="B·∫°n ƒë√£ ƒëƒÉng k√≠ t√†i kho·∫£n nh√† tuy·ªÉn d·ª•ng tr√™n web ch∆∞a ·∫°?\nN·∫øu ch∆∞a m·ªùi truy c·∫≠p https://timviec365.vn/dang-ky-nha-tuyen-dung.html"+gift_ntd+"\n       Ngo√†i ra b·∫°n c·∫ßn th√™m th√¥ng tin g√¨ n·ªØa kh√¥ng ·∫°?")
        
        
        return []

## t√†i kho·∫£n 
class action_taikhoan(Action):
    
    def name(self) -> Text:
        return "action_taikhoan"
    def run(self, dispatcher: CollectingDispatcher,
            tracker: Tracker,
            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:
        dispatcher.utter_message(
            text="Hi, Ch√†o b·∫°n.\nN·∫øu b·∫°n ch∆∞a c√≥ t√†i kho·∫£n ·ªü timviec365, vui l√≤ng truy c·∫≠p v√†o https://timviec365.vn/dang-ky.html nh√©.\nN·∫øu ƒë√£ c√≥ t√†i kho·∫£n r·ªìi, vui l√≤ng truy c·∫≠p https://timviec365.vn/dang-nhap.html ƒë·ªÉ t√¨m ki·∫øm vi·ªác l√†m ho·∫∑c t√¨m ·ª©ng vi√™n.")
        
        return []